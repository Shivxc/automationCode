<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="PC2017000216" failures="0" tests="23" name="ascending_test.ascending" time="16.569" errors="1" timestamp="27 Oct 2023 05:49:49 GMT" skipped="22">
  <testcase classname="ascending_test.ascending" name="beforeTest" time="16.569">
    <error message="Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 114
Current browser version is 118.0.5993.90 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe
Build info: version: &#039;4.4.0&#039;, revision: &#039;e5c75ed026a&#039;
System info: host: &#039;PC2017000216&#039;, ip: &#039;172.20.32.113&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;17.0.3&#039;
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*, --disable-notifications], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*, --disable-notifications], extensions: []}}}]" type="org.openqa.selenium.SessionNotCreatedException">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: session not created: This version of ChromeDriver only supports Chrome version 114
Current browser version is 118.0.5993.90 with binary path C:\Program Files\Google\Chrome\Application\chrome.exe
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'PC2017000216', ip: '172.20.32.113', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.3'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [null, newSession {capabilities=[Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*, --disable-notifications], extensions: []}}], desiredCapabilities=Capabilities {browserName: chrome, goog:chromeOptions: {args: [--remote-allow-origins=*, --disable-notifications], extensions: []}}}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:144)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:102)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:67)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:156)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:242)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.chromium.ChromiumDriver.<init>(ChromiumDriver.java:101)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:81)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:70)
at ascending_utils.base.beforeTest(base.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:458)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- beforeTest -->
  <testcase classname="ascending_test.ascending" name="logintitletest" time="0.000">
    <skipped/>
  </testcase> <!-- logintitletest -->
  <testcase classname="ascending_test.ascending" name="takescreenshottest" time="0.000">
    <skipped/>
  </testcase> <!-- takescreenshottest -->
  <testcase classname="ascending_test.ascending" name="loginTestseller" time="0.000">
    <skipped/>
  </testcase> <!-- loginTestseller -->
  <testcase classname="ascending_test.ascending" name="ascendingmarket" time="0.000">
    <skipped/>
  </testcase> <!-- ascendingmarket -->
  <testcase classname="ascending_test.ascending" name="loginTestadmin" time="0.000">
    <skipped/>
  </testcase> <!-- loginTestadmin -->
  <testcase classname="ascending_test.ascending" name="plan_order" time="0.000">
    <skipped/>
  </testcase> <!-- plan_order -->
  <testcase classname="ascending_test.ascending" name="loginTestseller2" time="0.000">
    <skipped/>
  </testcase> <!-- loginTestseller2 -->
  <testcase classname="ascending_test.ascending" name="statuscheckerseller" time="0.000">
    <skipped/>
  </testcase> <!-- statuscheckerseller -->
  <testcase classname="ascending_test.ascending" name="statuschecker" time="0.000">
    <skipped/>
  </testcase> <!-- statuschecker -->
  <testcase classname="ascending_test.ascending" name="checkNotification" time="0.000">
    <skipped/>
  </testcase> <!-- checkNotification -->
  <testcase classname="ascending_test.ascending" name="margin" time="0.000">
    <skipped/>
  </testcase> <!-- margin -->
  <testcase classname="ascending_test.ascending" name="loginTestSeller" time="0.000">
    <skipped/>
  </testcase> <!-- loginTestSeller -->
  <testcase classname="ascending_test.ascending" name="doBookmark" time="0.000">
    <skipped/>
  </testcase> <!-- doBookmark -->
  <testcase classname="ascending_test.ascending" name="marginbuyer" time="0.000">
    <skipped/>
  </testcase> <!-- marginbuyer -->
  <testcase classname="ascending_test.ascending" name="loginTestSeller2" time="0.000">
    <skipped/>
  </testcase> <!-- loginTestSeller2 -->
  <testcase classname="ascending_test.ascending" name="doBookmark2" time="0.000">
    <skipped/>
  </testcase> <!-- doBookmark2 -->
  <testcase classname="ascending_test.ascending" name="marginbuyer2" time="0.000">
    <skipped/>
  </testcase> <!-- marginbuyer2 -->
  <testcase classname="ascending_test.ascending" name="loginTestSeller3" time="0.000">
    <skipped/>
  </testcase> <!-- loginTestSeller3 -->
  <testcase classname="ascending_test.ascending" name="doBookmark3" time="0.000">
    <skipped/>
  </testcase> <!-- doBookmark3 -->
  <testcase classname="ascending_test.ascending" name="marginbuyer3" time="0.000">
    <skipped/>
  </testcase> <!-- marginbuyer3 -->
  <testcase classname="ascending_test.ascending" name="loginTestseller3" time="0.000">
    <skipped/>
  </testcase> <!-- loginTestseller3 -->
  <testcase classname="ascending_test.ascending" name="auctionwinnerlist" time="0.000">
    <skipped/>
  </testcase> <!-- auctionwinnerlist -->
</testsuite> <!-- ascending_test.ascending -->
